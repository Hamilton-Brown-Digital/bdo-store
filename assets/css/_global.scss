// SOME RESETS ===============================================

a,
button {
  cursor: pointer;
}

input,
button,
textarea {
  border: 0;
  border-radius: 0;
}

// HTML/BODY COLOURS ================================================

body {
  background-color: $color-bg;
  color: $color-text;
}
// anchor
a {
  text-decoration: none;
  color: black;
}

// ACCESSIBILITY ===============================================

.skip-link {
  z-index: 1000;
  position: absolute;
  top: $gap/2;
  left: $gap/2;
  padding: 0.5em;
  background-color: $off-white;
  font-size: 0.7em;
  text-transform: uppercase;

  &:hover {
    color: $black;
  }
  &:focus {
    border: 1px solid blue;
  }
}

// screen reader only
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// MAIN LAYOUT =============================================================

body.logged-in.admin-bar{
  @include break-under(sitewidth) {
    top: -32px !important;
    position: relative!important;
  }
}

html,
body {
  width: 100%;
  overflow-x:hidden;
}

body {
  &.locked {
    height: 100vh;
    overflow-y: hidden;
  }
}

.header {
  position: relative;
}

// main
main {
  min-height: 1000px;
  position: relative;
  flex-grow: 1;
  @include break-under(sitewidth) {
    padding-top:80px;
  }
}

footer {
  flex-shrink: 0;
}

#wpadminbar{
  @include break-under(sitewidth) {
    display: none;
  }
}

// ANIMATION =============================================================

// fancy transitions
$move-whip: cubic-bezier(0.8, 0, 0.3, 1);
$move-snap: cubic-bezier(0.7, -0.5, 0.3, 1.5);
$move-snap-in: cubic-bezier(0.6, -0.3, 0.7, 0);
$move-snap-out: cubic-bezier(0.2, 0.9, 0.3, 1.3);
$fast-to-slow: cubic-bezier(0.11, 0.71, 0.46, 0.91);

@mixin transition($property: all, $speed: 0.2s, $anim: $move-whip) {
  transition-property: $property;
  transition-duration: $speed;
  transition-timing-function: $anim;
}

// multiple arguments
@mixin transitions($speed, $anim, $property...) {
  transition-property: $property;
  transition-duration: $speed;
  transition-timing-function: $anim;
}

// anchor
a {
  @include transition(color, 0.3s);
  &:hover {
    color: $color-hover;
  }
}

// scroll behaviour
html {
  scroll-behavior: smooth;
}

svg path {
  fill: yellow !important;
}

%image-zoom {
  overflow: hidden;
  img {
    transform: scale(1);
    transition: 0.6s $fast-to-slow;
  }
  &:hover {
    img {
      transform: scale(1.05);
    }
  }
}

// LAYOUT =========================================

@mixin panel {
  position: relative;
  width: 100%;
  padding-top: $gap;
  padding-bottom: $gap;
}

@mixin panel--doublepad {
  padding-top: $gap * 2;
  padding-bottom: $gap * 2;
}

@mixin panel--nopad {
  width: 100%;
  padding-top: 0;
  padding-bottom: 0;
}

@mixin container {
  width: 100%;
  max-width: $sitewidth--nosidegaps;
  margin: 0 auto;
}

@mixin container--margins {
  width: 100%;
  max-width: $sitewidth--nosidegaps;
  margin: 0 auto;
  padding: 0 $sidegap;
}
@mixin container--margins--narrow {
  width: 100%;
  max-width: $sitewidth--nosidegaps;
  margin: 0 auto;
  padding: 0 $sidegap;
  @include break(960px) {
    padding: 0;
  }
}

.container {
  @include container;
}

.container--margins {
  @include container--margins;
}

.panel {
  @include panel;
  &--nopad {
    padding-top: 0;
    padding-bottom: 0;
  }
  &--doublepad {
    @include panel--doublepad;
  }
  &--nopad-top {
    padding-top: 0;
  }
  &--no-inner {
    @include break-under(sitewidth) {
      padding-left: $gap--responsive;
      padding-right: $gap--responsive;
    }
  }
  &__inner {
    z-index: 1;
    position: relative;
    @include container--margins;
  }
  &__inner-narrow {
    z-index: 1;
    position: relative;
    @include container--margins--narrow;
  }
}

.panel.hero:not(.panel--no-inner) {
  & > * {
    z-index: 1;
  }
  &:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1));
  }
}

@mixin grid {
  display: grid;
  grid-gap: $gap--responsive;
  &__item {
    @include break-under(sitewidth) {
      margin-bottom: $gap--responsive--thick;
    }
  }
}

// GLOBAL MIXINS AND INCLUDES =====================================================================================

// tagline
.tagline,
%tagline {
  color: $color-tagline;
  text-transform: uppercase;
  display: block;
  font-size: 0.8em;
}

@mixin raised-object{
  border-radius: $border-radius;
  box-shadow:$box-shadow;
  .component-dark &{
    box-shadow:$box-shadow--black-bg;
  }
}

// GLOBAL ELEMENTS AND CLASSES =====================================================================================

// hidden/visible
.hidden {
  visibility: hidden;
  opacity: 0;
  height: 0;
}
.visible {
  visibility: visible;
  opacity: 1;
}

p,
ul,
ol {
  padding: 0;
  margin: 0;
  line-height: $line-height-std;
  list-style: none;
}

// styled links

@mixin link-styled($color: black) {
  color: $color;
  text-decoration-thickness: 0.1em;
  text-decoration-color: $color;
  display: inline-block;
  @include font-semi;
  border-bottom:3px solid $color-primary;
  &:hover {
    color: $color-hover;
    text-decoration-color: $color-hover;
  }
}
@mixin link-styled--inline($color: black) {
  color: $color;
  display: inline-block;
  text-decoration-thickness: 0.1em;
  text-decoration-color: $color;
  border-bottom:2px solid $color-primary;
  &:hover {
    color: $color-hover;
    text-decoration-color: $color-hover;
  }
}

// text highlight
::selection {
  background: $color-primary;
  color: white;
}

// text no break
.nobreak {
  white-space: nowrap;
}

// component globals

@mixin component-dark {
  color: $white;
  background-color: $off-black;
  h1,
  h2,
  h3,
  h4,
  h5,
  ul,
  ol,
  p,
  a,
  i {
    color: $white;
  }
  a:hover,
  svg:hover {
    color: $color-primary-feint;
  }
}
@mixin component-light {
  background-color: $white;
}

.component-dark {
  @include component-dark;
}
.component-light {
  @include component-light;
}

// BUTTONS =====================================================================================

// Turn button into inline link
@mixin button-inline {
  border-radius: 0;
  border: none;
  display: inline;
  padding: 0;
  font-family: inherit;
  cursor: pointer;
  color: $link-colors;
}

@mixin btn-state($color, $textcolor) {
  @include transition(background-color);
  &:hover {
    color: $textcolor;
    background-color: darken($color, 5);
  }
  &:active {
    color: $textcolor;
    background-color: darken($color, 5);
  }
}

@mixin button($color-button: $color-link) {
  cursor: pointer;
  padding: 1em;
  @include align;
  display: inline-flex;
  width: auto;
  text-align: center;
  position: relative;
  text-decoration: none !important;
  background-color: $color-button;
  color: $white;
  border-radius: 2px;
  @include btn-state($color-button, $white);
  @include break(phone) {
    padding: 1em 1.3em;
  }
}
@mixin button--anim {
  @include text-blocky--tiny;
  background-color: $off-black;
  display: inline-block;
  color: $white;
  border-radius: 2px;
  position: relative;
  cursor: pointer;
  position: relative;
  span {
    position: relative;
    z-index: 2;
  }
  &:after {
    width: 100%;
    height: 0%;
    background: $black;
    display: block;
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    transition: all 0.2s $fast-to-slow 0s;
  }
  &:hover {
    &:after {
      height: 100%;
    }
  }
}

.button {
  cursor: pointer;
  border-radius: 3px;
  padding: 1em;
  display: inline-block;
  width: auto;
  text-align: center;
  position: relative;
  text-decoration: none !important;
  background-color: $color-button;
  color: $white;
  @include btn-state($color-button, $white);
  @include break(phone) {
    padding: 1em 1.3em;
  }
  &--alt {
    background-color: $white;
    color: $color-button;
    @include btn-state($white, $color-secondary);
  }
  &--outline {
    background-color: transparent;
    color: $color-button;
    border: $color-button 1px solid;
    @include btn-state($color-button, $white);
  }
  // for buttons with lots of things inside that need to be aligned
  &__inner {
    width: 100%;
    height: 100%;
    @include align(center, center);
  }
  &--small {
    @include text-tiny;
    @include break(phone) {
      padding: 0.8em 1em;
    }
  }
}

// DIVIDERS ========================================================================

@mixin divider{
  display: block;
  border-top: 1px solid #DBDBDB;
  height: 1px;
  background-color: #ffffff;
}

@mixin block-title{
  display: flex;
  margin-bottom: $gap/2;
  align-items: center;
  gap: 1em;
  @include text-blocky;
  &:after{
    @include divider;
    content: '';
    flex-grow: 1;
  }
}

.block-title{
  @include block-title;
}

// FORMS ========================================================================

form {
  input,
  button,
  textarea {
    border: 1px solid $color-dark-gray;
  }
  input,
  textarea {
    padding: 0.8em;
    padding-top: 0.6em;
    border-radius: 0;
  }
  label {
    font-size: $font-size-std;
    @include font-body;
  }
}

// MISC ========================================================================

code {
  background-color: $off-black;
  color: chartreuse;
  margin-bottom: $gap;
  padding: 1em;
  display: block;
}



// UTILITIES =============================================================

.gap-top{
  margin-top:$gap;
}
.gap-top--padding{
  padding-top:$gap;
}

.gap-bottom{
  margin-bottom:$gap;
}
.gap-bottom--padding{
  padding-bottom:$gap;
}
.gap-bottom--x2{
  margin-bottom:$gap*2;
}
.gap-bottom--2x--padding{
  padding-bottom:$gap*2;
}